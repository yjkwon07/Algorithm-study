#include<iostream>
using namespace std;
/*
	이친수 
	https://www.acmicpc.net/problem/2193
	
	0과 1로만 이루어진 수를 이진수라고 한다.
	다음 조건을 만족하면 이친수라고 한다.
	이친수는 0으로 시작하지 않는다.
	이친수에서는 1이 두 번 연속으로 나타나지 않는다. 즉, 11을 부분 문자열로 갖지 않는다.
	N자리 이친수의 개수를 구하는 문제

	D[i][j] = i자리 이친수의 개수 중에서 j로 끝나는 것의 개수 (j = 0, 1)
	0으로 시작하지 않는다.
	D[1][0] = 0
	D[1][1] = 1
	
	가능한 경우 
		0으로 끝나는 경우
		앞에 0 과 1이 올 수 있다.
	D[i-1][0] + D[i-1][1]
		1로 끝나는 경우
		앞에 1은 올 수 없다. 즉, 0만 올 수 있다.
		앞에 붙는 0을 세트로 생각해서 i -2자리에 01을 붙인다고 생각
		D[i-1][0]
	D[i][0] = D[i-1][0] + D[i-1][1]
	D[i][1] = D[i-1][0] 
	D[i] = i자리 이친수의 개수
	D[i] = D[i-1] + D[i-2]
*/
long long a[91][2];

int main() {
	int n;
	cin >> n;
	a[1][0] = 0;
	a[1][1] = 1;

	for (int i = 2; i <= n; i++) {
		for (int j = 0; j < 2; j++) {
			if (j == 0) {
				a[i][j] = a[i - 1][0] + a[i - 1][1];
			}
			else {
				a[i][j] = a[i - 1][0];
			}
		}
	}
	cout << a[n][0] + a[n][1] << '\n';
	return 0;
}