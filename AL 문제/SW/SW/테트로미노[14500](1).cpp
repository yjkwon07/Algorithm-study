#include <stdio.h>
/*
	테트로미노
	https://www.acmicpc.net/problem/14500

	테트로미노는 총 19가지가 있고
	하나의 테트로미노당 놓을 수 있는 방법의 개수는 약, O(NM)가지 이다.
	경우의 수가 많지 않기 때문에
	각각의 테트로미노에 대해서 모든 칸에 놓아본다.
	(1)풀이는 char로 경우의 수 그림을 그림 
	char의 특성상 "string" 입력 시 3차원의 [4]를 [5] 5로 1칸을 더 늘려야 한다.
	why? -> /n 이 늘어남
*/
int n, m;
int map[503][503];

const char block[19][4][5] = {
	{
		"1111",
		"0000",
		"0000",
		"0000",
	},
	{
		"1000",
		"1000",
		"1000",
		"1000",
	},
	{
		"1100",
		"1100",
		"0000",
		"0000",
	},
	{
		"1000",
		"1000",
		"1100",
		"0000",
	},
	{
		"1110",
		"1000",
		"0000",
		"0000",
	},
	{
		"1100",
		"0100",
		"0100",
		"0000",
	},
	{
		"0010",
		"1110",
		"0000",
		"0000",
	},
	{
		"0100",
		"0100",
		"1100",
		"0000",
	},
	{
		"1000",
		"1110",
		"0000",
		"0000",
	},
	{
		"1100",
		"1000",
		"1000",
		"0000",
	},
	{
		"1110",
		"0010",
		"0000",
		"0000",
	},
	{
		"1000",
		"1100",
		"0100",
		"0000",
	},
	{
		"0110",
		"1100",
		"0000",
		"0000",
	},
	{
		"0100",
		"1100",
		"1000",
		"0000",
	},
	{
		"1100",
		"0110",
		"0000",
		"0000",
	},
	{
		"1110",
		"0100",
		"0000",
		"0000",
	},
	{
		"0100",
		"1100",
		"0100",
		"0000",
	},
	{
		"0100",
		"1110",
		"0000",
		"0000",
	},
	{
		"1000",
		"1100",
		"1000",
		"0000",
	}
};

int get_count(int sy, int sx, int k) {
	int ret = 0;
	for (int y = 0; y < 4; ++y) {
		for (int x = 0; x < 4; ++x) {
			ret += (block[k][y][x] - '0') * map[sy + y][sx + x];
		}
	}
	return ret;
}

int main()
{
	scanf("%d %d", &n, &m);
	for (int y = 0; y < n; ++y) {
		for (int x = 0; x < m; ++x) {
			scanf("%d", &map[y][x]);
		}
	}

	// 범위를 늘려 range_over 조건 무시 
	for (int y = n; y < n + 3; ++y) {
		for (int x = 0; x < m + 3; ++x) {
			map[y][x] = -100000;
		}
	}

	for (int y = 0; y < n + 3; ++y) {
		for (int x = m; x < m + 3; ++x) {
			map[y][x] = -100000;
		}
	}

	int ret = 0;
	for (int y = 0; y < n; ++y) {
		for (int x = 0; x < m; ++x) {
			for (int k = 0; k < 19; ++k) {
				int candi = get_count(y, x, k);
				if (ret < candi) {
					ret = candi;
				}
			}
		}
	}
	printf("%d\n", ret);
	return 0;
}